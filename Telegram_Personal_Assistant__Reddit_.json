{
  "name": "Telegram Personal Assistant (Reddit)",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -40,
        0
      ],
      "id": "443f9cb3-05ed-41e3-9cea-001ab9cfd91b",
      "name": "Telegram Trigger",
      "webhookId": "11981e61-49da-47fe-b848-5575f9da0023",
      "credentials": {
        "telegramApi": {
          "id": "eNW6am7gZA3WzQNd",
          "name": "Nil"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.message.chat.id }}",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        220,
        240
      ],
      "id": "c722e874-4494-49a2-bb2a-8ba81f410c42",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        580,
        0
      ],
      "id": "441a59f9-affa-4ef8-85de-5b710a744abe",
      "name": "Reply Message",
      "webhookId": "912f6677-fb8b-400a-a220-764f5fa4197c",
      "credentials": {
        "telegramApi": {
          "id": "eNW6am7gZA3WzQNd",
          "name": "Nil"
        }
      }
    },
    {
      "parameters": {
        "description": "call for calendar related tasks",
        "workflowId": {
          "__rl": true,
          "value": "TQrI3y7PR6Ca5TPT",
          "mode": "list",
          "cachedResultName": "Telegram Calendar Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "User Message": "={{ $('Telegram Trigger').item.json.message.text }}",
            "chat ID": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "User Message",
              "displayName": "User Message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "chat ID",
              "displayName": "chat ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        360,
        240
      ],
      "id": "99b98e28-67d1-495c-9fa1-5257ca03c475",
      "name": "calendar_agent"
    },
    {
      "parameters": {
        "description": "call for email related tasks",
        "workflowId": {
          "__rl": true,
          "value": "E8EysXj0QppxxjwA",
          "mode": "list",
          "cachedResultName": "E-Mail Telegram Message"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "User Message": "={{ $('Telegram Trigger').item.json.message.text }}",
            "chat ID": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
          },
          "matchingColumns": [
            "User Message"
          ],
          "schema": [
            {
              "id": "User Message",
              "displayName": "User Message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "chat ID",
              "displayName": "chat ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        540,
        240
      ],
      "id": "ca2abbf2-c6f0-49d1-a1a7-76e1e0cbe72c",
      "name": "email_agent"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.message.text }}",
        "options": {
          "systemMessage": "You are Nikita ‚Äì a smart, cheerful, and highly capable personal assistant ü§ñüí´.\n\nYou work alongside two specialized agents:\n\n1. üìÖ calendar_agent ‚Äì Manages everything related to **calendar events**, including booking, updating, deleting, or retrieving events.\n\n2. üìß email_agent ‚Äì Handles **email-related tasks**, such as sending emails or retrieving email content.\n\nYour responsibilities as Nikita:\n\n‚ú® Understand the **intent and details** from the user's message (available via `userMessage`; e.g., `'hello'`).\n\n‚ú® Determine whether the task is related to:\n\n* üìÖ Calendar ‚Üí delegate to `calendar_agent`\n* üìß **Email ‚Üí delegate to `email_agent`\n\n‚ú® Respond politely and clearly with the right emojis to make the chat feel engaging and friendly üòä\n\nRules you must always follow:\n\n‚úÖ If the request involves event booking, updating, deleting, or fetching, call calendar_agent and provide necessary info (event name, date, time, etc.).\n\n‚úÖ If the request involves sending or retrieving emails, call email_agent and include details like recipient, subject, and body.\n\n‚ùì If the user's message is unclear or incomplete, reply cheerfully asking for clarification. Example:\n\n\"Hmm ü§î I didn't quite catch that! Could you please give me a bit more info so I can help you better? üòä\"\n\n‚ö†Ô∏è Only act based on the structured data received in User Message. Do not guess intent from anything outside that message.\n\nüéØ Always stay concise, accurate, and helpful, and delegate only when the intent is clear."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        220,
        0
      ],
      "id": "48e5a818-adba-4c0f-8489-2129081d973b",
      "name": "Personal Assistant Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        60,
        240
      ],
      "id": "958ee5f3-9f5c-4dd7-9e07-8e8297bc9f64",
      "name": "Personal AI",
      "credentials": {
        "openAiApi": {
          "id": "p54f87oDcyoAQ13u",
          "name": "Nil"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Personal Assistant Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "Personal Assistant Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "calendar_agent": {
      "ai_tool": [
        [
          {
            "node": "Personal Assistant Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "email_agent": {
      "ai_tool": [
        [
          {
            "node": "Personal Assistant Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Personal Assistant Agent": {
      "main": [
        [
          {
            "node": "Reply Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Personal AI": {
      "ai_languageModel": [
        [
          {
            "node": "Personal Assistant Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "c6f479a0-288a-4bbc-9ec5-6da615ef48a8",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "486b3918d83345a21c3d5061a20fa8219700ba4ab2edaaa9cda56713faac1fef"
  },
  "id": "Ngc59F4beHaUeU7O",
  "tags": [
    {
      "createdAt": "2025-07-22T17:14:03.199Z",
      "updatedAt": "2025-07-22T17:14:03.199Z",
      "id": "RxeJgvsMzktR3D8h",
      "name": "Telegram"
    },
    {
      "createdAt": "2025-07-07T14:05:49.136Z",
      "updatedAt": "2025-07-07T14:05:49.136Z",
      "id": "dxLCRBFTiNpbUIta",
      "name": "AI Automation"
    }
  ]
}